{"ast":null,"code":"import { graphConfig } from '../authConfig';\n\n/**\r\n * Attaches a given access token to a MS Graph API call. Returns information about the user\r\n * @param accessToken\r\n */\nexport async function callMe(accessToken) {\n  const headers = new Headers();\n  const bearer = `Bearer ${accessToken}`;\n  headers.append('Authorization', bearer);\n  const options = {\n    method: 'GET',\n    headers: headers\n  };\n  return fetch(graphConfig.graphMeEndpoint, options).then(response => response.json()).catch(error => console.log(error));\n}\nexport async function callPhoto(accessToken) {\n  const headers = new Headers();\n  const bearer = `Bearer ${accessToken}`;\n  headers.append('Authorization', bearer);\n  const options = {\n    method: 'GET',\n    headers: headers\n  };\n  return fetch('https://graph.microsoft.com/v1.0/me/photo/$value', options).then(response => response).catch(error => console.log(error));\n}\nexport async function getAdminGroup(accessToken) {\n  const headers = new Headers();\n  const bearer = `Bearer ${accessToken}`;\n  headers.append('Authorization', bearer);\n  headers.append('ConsistencyLevel', 'eventual');\n  const options = {\n    method: 'GET',\n    headers: headers\n  };\n  return fetch(`https://graph.microsoft.com/v1.0/groups?$search=\"displayName:AG-CorportalNEW_Admins\"`, options).then(response => response).catch(error => console.log(error));\n}\nexport async function getAdminMembers(accessToken) {\n  let groupID = '5ddf05d9-58e7-4fb8-8e42-a5281828f3e7';\n  const headers = new Headers();\n  const bearer = `Bearer ${accessToken}`;\n  headers.append('Authorization', bearer);\n  const options = {\n    method: 'GET',\n    headers: headers\n  };\n  return fetch(`https://graph.microsoft.com/v1.0/groups/${groupID}/members`, options).then(response => response).catch(error => console.log(error));\n}\nexport async function getAllUsers(accessToken) {\n  const headers = new Headers();\n  const bearer = `Bearer ${accessToken}`;\n  headers.append('Authorization', bearer);\n  const options = {\n    method: 'GET',\n    headers: headers\n  };\n  return fetch('https://graph.microsoft.com/v1.0/users?$top=999&$select=DisplayName,accountEnabled,userPrincipalName,jobTitle,onPremisesExtensionAttributes,id', options).then(response => response).catch(error => console.log(error));\n}\nexport async function getUserById(accessToken, userId) {\n  const headers = new Headers();\n  const bearer = `Bearer ${accessToken}`;\n  headers.append('Authorization', bearer);\n  const options = {\n    method: 'GET',\n    headers: headers\n  };\n  return fetch(`https://graph.microsoft.com/v1.0/users/${userId}?$select=DisplayName,accountEnabled,userPrincipalName,jobTitle,onPremisesExtensionAttributes,id,mobilePhone,mail,department`, options).then(response => response).catch(error => console.log(error));\n}\nexport async function getPhotoUser(accessToken, id) {\n  const headers = new Headers();\n  const bearer = `Bearer ${accessToken}`;\n  headers.append('Authorization', bearer);\n  const options = {\n    method: 'GET',\n    headers: headers\n  };\n  return fetch(`https://graph.microsoft.com/v1.0/users/${id}/photo/$value`, options).then(response => {\n    if (response) {\n      return response;\n    }\n  }).catch(error => {\n    console.log(error);\n  });\n}\nexport async function getStructureCompany(accessToken) {\n  // Отримує людей які підпорядковуються цій людині ІД\n  const headers = new Headers();\n  const bearer = `Bearer ${accessToken}`;\n  headers.append('Authorization', bearer);\n  const options = {\n    method: 'GET',\n    headers: headers\n  };\n\n  // 4af0fe36-d384-4634-a344-f706b61c1158  --- ID Бобровского Сергія\n  // /users/{id | userPrincipalName}/manager  --- Дізнатися керівника юзера\n\n  return fetch('https://graph.microsoft.com/v1.0/users/4af0fe36-d384-4634-a344-f706b61c1158/directReports', options).then(response => response).catch(error => console.log(error));\n}","map":{"version":3,"names":["graphConfig","callMe","accessToken","headers","Headers","bearer","append","options","method","fetch","graphMeEndpoint","then","response","json","catch","error","console","log","callPhoto","getAdminGroup","getAdminMembers","groupID","getAllUsers","getUserById","userId","getPhotoUser","id","getStructureCompany"],"sources":["E:/WEB/korportal-master/src/api/graph.js"],"sourcesContent":["import { graphConfig } from '../authConfig';\r\n\r\n/**\r\n * Attaches a given access token to a MS Graph API call. Returns information about the user\r\n * @param accessToken\r\n */\r\nexport async function callMe(accessToken) {\r\n\tconst headers = new Headers();\r\n\tconst bearer = `Bearer ${accessToken}`;\r\n\r\n\theaders.append('Authorization', bearer);\r\n\r\n\tconst options = {\r\n\t\tmethod: 'GET',\r\n\t\theaders: headers,\r\n\t};\r\n\r\n\treturn fetch(graphConfig.graphMeEndpoint, options)\r\n\t\t.then((response) => response.json())\r\n\t\t.catch((error) => console.log(error));\r\n}\r\nexport async function callPhoto(accessToken) {\r\n\tconst headers = new Headers();\r\n\tconst bearer = `Bearer ${accessToken}`;\r\n\r\n\theaders.append('Authorization', bearer);\r\n\tconst options = {\r\n\t\tmethod: 'GET',\r\n\t\theaders: headers,\r\n\t};\r\n\r\n\treturn fetch('https://graph.microsoft.com/v1.0/me/photo/$value', options)\r\n\t\t.then((response) => response)\r\n\t\t.catch((error) => console.log(error));\r\n}\r\nexport async function getAdminGroup(accessToken) {\r\n\tconst headers = new Headers();\r\n\tconst bearer = `Bearer ${accessToken}`;\r\n\r\n\theaders.append('Authorization', bearer);\r\n\theaders.append('ConsistencyLevel', 'eventual');\r\n\r\n\tconst options = {\r\n\t\tmethod: 'GET',\r\n\t\theaders: headers,\r\n\t};\r\n\r\n\treturn fetch(`https://graph.microsoft.com/v1.0/groups?$search=\"displayName:AG-CorportalNEW_Admins\"`, options)\r\n\t\t.then((response) => response)\r\n\t\t.catch((error) => console.log(error));\r\n}\r\nexport async function getAdminMembers(accessToken) {\r\n\tlet groupID = '5ddf05d9-58e7-4fb8-8e42-a5281828f3e7';\r\n\r\n\tconst headers = new Headers();\r\n\tconst bearer = `Bearer ${accessToken}`;\r\n\r\n\theaders.append('Authorization', bearer);\r\n\r\n\tconst options = {\r\n\t\tmethod: 'GET',\r\n\t\theaders: headers,\r\n\t};\r\n\r\n\treturn fetch(`https://graph.microsoft.com/v1.0/groups/${groupID}/members`, options)\r\n\t\t.then((response) => response)\r\n\t\t.catch((error) => console.log(error));\r\n}\r\nexport async function getAllUsers(accessToken) {\r\n\tconst headers = new Headers();\r\n\tconst bearer = `Bearer ${accessToken}`;\r\n\r\n\theaders.append('Authorization', bearer);\r\n\tconst options = {\r\n\t\tmethod: 'GET',\r\n\t\theaders: headers,\r\n\t};\r\n\r\n\treturn fetch(\r\n\t\t'https://graph.microsoft.com/v1.0/users?$top=999&$select=DisplayName,accountEnabled,userPrincipalName,jobTitle,onPremisesExtensionAttributes,id',\r\n\t\toptions\r\n\t)\r\n\t\t.then((response) => response)\r\n\t\t.catch((error) => console.log(error));\r\n}\r\nexport async function getUserById(accessToken, userId) {\r\n\tconst headers = new Headers();\r\n\tconst bearer = `Bearer ${accessToken}`;\r\n\r\n\theaders.append('Authorization', bearer);\r\n\tconst options = {\r\n\t\tmethod: 'GET',\r\n\t\theaders: headers,\r\n\t};\r\n\r\n\treturn fetch(\r\n\t\t`https://graph.microsoft.com/v1.0/users/${userId}?$select=DisplayName,accountEnabled,userPrincipalName,jobTitle,onPremisesExtensionAttributes,id,mobilePhone,mail,department`,\r\n\t\toptions\r\n\t)\r\n\t\t.then((response) => response)\r\n\t\t.catch((error) => console.log(error));\r\n}\r\nexport async function getPhotoUser(accessToken, id) {\r\n\tconst headers = new Headers();\r\n\tconst bearer = `Bearer ${accessToken}`;\r\n\r\n\theaders.append('Authorization', bearer);\r\n\tconst options = {\r\n\t\tmethod: 'GET',\r\n\t\theaders: headers,\r\n\t};\r\n\r\n\treturn fetch(`https://graph.microsoft.com/v1.0/users/${id}/photo/$value`, options)\r\n\t\t.then((response) => {\r\n\t\t\tif (response) {\r\n\t\t\t\treturn response;\r\n\t\t\t}\r\n\t\t})\r\n\t\t.catch((error) => {\r\n\t\t\tconsole.log(error);\r\n\t\t});\r\n}\r\nexport async function getStructureCompany(accessToken) {\r\n\t// Отримує людей які підпорядковуються цій людині ІД\r\n\tconst headers = new Headers();\r\n\tconst bearer = `Bearer ${accessToken}`;\r\n\r\n\theaders.append('Authorization', bearer);\r\n\tconst options = {\r\n\t\tmethod: 'GET',\r\n\t\theaders: headers,\r\n\t};\r\n\r\n\t// 4af0fe36-d384-4634-a344-f706b61c1158  --- ID Бобровского Сергія\r\n\t// /users/{id | userPrincipalName}/manager  --- Дізнатися керівника юзера\r\n\r\n\treturn fetch('https://graph.microsoft.com/v1.0/users/4af0fe36-d384-4634-a344-f706b61c1158/directReports', options)\r\n\t\t.then((response) => response)\r\n\t\t.catch((error) => console.log(error));\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}