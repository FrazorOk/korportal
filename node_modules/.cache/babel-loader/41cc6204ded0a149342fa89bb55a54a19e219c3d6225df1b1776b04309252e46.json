{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nexport const counterSlice = createSlice({\n  name: 'counter',\n  initialState: {\n    value: 0\n  },\n  reducers: {\n    increment: state => {\n      // Redux Toolkit позволяет нам писать \"мутабельную\" логику в reducer'ах.\n      // Это не изменяет состояние(state) напрямую, потому что внутри используется библиотека Immer,\n      // которая следит за изменениями в \"черновом state\" и создает новое\n      // неизменное состояние на основе этих изменений\n      state.value += 1;\n    },\n    decrement: state => {\n      state.value -= 1;\n    },\n    incrementByAmount: (state, action) => {\n      state.value += action.payload;\n    }\n  }\n});\n\n// Функция действия генерируется на каждую функцию релюсера(reducer), определённую в createSlice\nexport const {\n  increment,\n  decrement,\n  incrementByAmount\n} = counterSlice.actions;\nexport default counterSlice.reducer;","map":{"version":3,"names":["createSlice","counterSlice","name","initialState","value","reducers","increment","state","decrement","incrementByAmount","action","payload","actions","reducer"],"sources":["C:/Users/zhuikov/OneDrive - SOFTCOM/Desktop/web/2024/korportal/src/store/userSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const counterSlice = createSlice({\r\n\tname: 'counter',\r\n\tinitialState: {\r\n\t\tvalue: 0,\r\n\t},\r\n\treducers: {\r\n\t\tincrement: (state) => {\r\n\t\t\t// Redux Toolkit позволяет нам писать \"мутабельную\" логику в reducer'ах.\r\n\t\t\t// Это не изменяет состояние(state) напрямую, потому что внутри используется библиотека Immer,\r\n\t\t\t// которая следит за изменениями в \"черновом state\" и создает новое\r\n\t\t\t// неизменное состояние на основе этих изменений\r\n\t\t\tstate.value += 1;\r\n\t\t},\r\n\t\tdecrement: (state) => {\r\n\t\t\tstate.value -= 1;\r\n\t\t},\r\n\t\tincrementByAmount: (state, action) => {\r\n\t\t\tstate.value += action.payload;\r\n\t\t},\r\n\t},\r\n});\r\n\r\n// Функция действия генерируется на каждую функцию релюсера(reducer), определённую в createSlice\r\nexport const { increment, decrement, incrementByAmount } = counterSlice.actions;\r\n\r\nexport default counterSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,OAAO,MAAMC,YAAY,GAAGD,WAAW,CAAC;EACvCE,IAAI,EAAE,SAAS;EACfC,YAAY,EAAE;IACbC,KAAK,EAAE;EACR,CAAC;EACDC,QAAQ,EAAE;IACTC,SAAS,EAAGC,KAAK,IAAK;MACrB;MACA;MACA;MACA;MACAA,KAAK,CAACH,KAAK,IAAI,CAAC;IACjB,CAAC;IACDI,SAAS,EAAGD,KAAK,IAAK;MACrBA,KAAK,CAACH,KAAK,IAAI,CAAC;IACjB,CAAC;IACDK,iBAAiB,EAAEA,CAACF,KAAK,EAAEG,MAAM,KAAK;MACrCH,KAAK,CAACH,KAAK,IAAIM,MAAM,CAACC,OAAO;IAC9B;EACD;AACD,CAAC,CAAC;;AAEF;AACA,OAAO,MAAM;EAAEL,SAAS;EAAEE,SAAS;EAAEC;AAAkB,CAAC,GAAGR,YAAY,CAACW,OAAO;AAE/E,eAAeX,YAAY,CAACY,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}