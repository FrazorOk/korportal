{"ast":null,"code":"var _jsxFileName = \"E:\\\\web\\\\web\\\\2024\\\\korportal\\\\src\\\\components\\\\SignInButton\\\\SignInButton.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useMsal } from '@azure/msal-react';\nimport { loginRequest } from '../../authConfig';\nimport s from './SignInButton.module.css';\n\n/**\n * Renders a drop down button with child buttons for logging in with a popup or redirect\n */\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const SignInButton = () => {\n  _s();\n  const {\n    instance\n  } = useMsal();\n  const handleLogin = loginType => {\n    if (loginType === 'popup') {\n      instance.loginPopup(loginRequest).catch(e => {});\n    } else if (loginType === 'redirect') {\n      instance.loginRedirect(loginRequest).catch(e => {});\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      className: s.button,\n      onClick: () => handleLogin('popup'),\n      children: \"\\u0423\\u0412\\u0406\\u0419\\u0422\\u0418\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 4\n    }, this)\n  }, void 0, false);\n};\n_s(SignInButton, \"kNmaupTUyOO55c/HFAYpHUXUX7Y=\", false, function () {\n  return [useMsal];\n});\n_c = SignInButton;\nvar _c;\n$RefreshReg$(_c, \"SignInButton\");","map":{"version":3,"names":["React","useMsal","loginRequest","s","jsxDEV","_jsxDEV","Fragment","_Fragment","SignInButton","_s","instance","handleLogin","loginType","loginPopup","catch","e","loginRedirect","children","className","button","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/web/web/2024/korportal/src/components/SignInButton/SignInButton.jsx"],"sourcesContent":["import React from 'react';\nimport { useMsal } from '@azure/msal-react';\nimport { loginRequest } from '../../authConfig';\nimport s from './SignInButton.module.css';\n\n/**\n * Renders a drop down button with child buttons for logging in with a popup or redirect\n */\nexport const SignInButton = () => {\n\tconst { instance } = useMsal();\n\n\tconst handleLogin = (loginType) => {\n\t\tif (loginType === 'popup') {\n\t\t\tinstance.loginPopup(loginRequest).catch((e) => {});\n\t\t} else if (loginType === 'redirect') {\n\t\t\tinstance.loginRedirect(loginRequest).catch((e) => {});\n\t\t}\n\t};\n\treturn (\n\t\t<>\n\t\t\t<button className={s.button} onClick={() => handleLogin('popup')}>\n\t\t\t\tУВІЙТИ\n\t\t\t</button>\n\t\t\t{/* <button onClick={() => handleLogin('redirect')}>Sign in using Redirect</button> */}\n\t\t</>\n\t);\n};\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,OAAO,QAAQ,mBAAmB;AAC3C,SAASC,YAAY,QAAQ,kBAAkB;AAC/C,OAAOC,CAAC,MAAM,2BAA2B;;AAEzC;AACA;AACA;AAFA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAGA,OAAO,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjC,MAAM;IAAEC;EAAS,CAAC,GAAGT,OAAO,CAAC,CAAC;EAE9B,MAAMU,WAAW,GAAIC,SAAS,IAAK;IAClC,IAAIA,SAAS,KAAK,OAAO,EAAE;MAC1BF,QAAQ,CAACG,UAAU,CAACX,YAAY,CAAC,CAACY,KAAK,CAAEC,CAAC,IAAK,CAAC,CAAC,CAAC;IACnD,CAAC,MAAM,IAAIH,SAAS,KAAK,UAAU,EAAE;MACpCF,QAAQ,CAACM,aAAa,CAACd,YAAY,CAAC,CAACY,KAAK,CAAEC,CAAC,IAAK,CAAC,CAAC,CAAC;IACtD;EACD,CAAC;EACD,oBACCV,OAAA,CAAAE,SAAA;IAAAU,QAAA,eACCZ,OAAA;MAAQa,SAAS,EAAEf,CAAC,CAACgB,MAAO;MAACC,OAAO,EAAEA,CAAA,KAAMT,WAAW,CAAC,OAAO,CAAE;MAAAM,QAAA,EAAC;IAElE;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ;EAAC,gBAER,CAAC;AAEL,CAAC;AAACf,EAAA,CAlBWD,YAAY;EAAA,QACHP,OAAO;AAAA;AAAAwB,EAAA,GADhBjB,YAAY;AAAA,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}