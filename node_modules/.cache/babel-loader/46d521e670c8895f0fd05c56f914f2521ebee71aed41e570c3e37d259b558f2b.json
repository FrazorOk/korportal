{"ast":null,"code":"var _jsxFileName = \"E:\\\\web\\\\web\\\\2024\\\\ms-korportal\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { loginRequest } from './authConfig';\nimport { callMe } from './api/graph';\nimport { ProfileData } from './components/ProfileData';\nimport { AuthenticatedTemplate, UnauthenticatedTemplate, useMsal } from '@azure/msal-react';\nimport './App.css';\nimport Button from 'react-bootstrap/Button';\nimport LoginPage from './pages/LoginPage';\nimport HomePage from './pages/HomePage';\nimport PageLayout from './components/PageLayout/PageLayout';\n\n/**\n * Renders information about the signed-in user or a button to retrieve data about the user\n */\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ProfileContent = () => {\n  _s();\n  const {\n    instance,\n    accounts\n  } = useMsal();\n  const [graphData, setGraphData] = useState(null);\n  function RequestProfileData() {\n    // Silently acquires an access token which is then attached to a request for MS Graph data\n    instance.acquireTokenSilent({\n      ...loginRequest,\n      account: accounts[0]\n    }).then(response => {\n      callMe(response.accessToken).then(response => setGraphData(response));\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n      className: \"profileContent\",\n      children: [\"Welcome \", accounts[0].name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 4\n    }, this), graphData ? /*#__PURE__*/_jsxDEV(ProfileData, {\n      graphData: graphData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }, this) : /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"secondary\",\n      onClick: RequestProfileData,\n      children: \"Request Profile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n\n/**\n * If a user is authenticated the ProfileContent component above is rendered. Otherwise a message indicating a user is not authenticated is rendered.\n */\n_s(ProfileContent, \"Yv9iIfg/KlJUHiV6HxvMaVu16s0=\", false, function () {\n  return [useMsal];\n});\n_c = ProfileContent;\nexport default function App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(AuthenticatedTemplate, {\n      children: /*#__PURE__*/_jsxDEV(PageLayout, {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"gi\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(UnauthenticatedTemplate, {\n      children: /*#__PURE__*/_jsxDEV(LoginPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 3\n  }, this);\n}\n_c2 = App;\nvar _c, _c2;\n$RefreshReg$(_c, \"ProfileContent\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useState","loginRequest","callMe","ProfileData","AuthenticatedTemplate","UnauthenticatedTemplate","useMsal","Button","LoginPage","HomePage","PageLayout","jsxDEV","_jsxDEV","Fragment","_Fragment","ProfileContent","_s","instance","accounts","graphData","setGraphData","RequestProfileData","acquireTokenSilent","account","then","response","accessToken","children","className","name","fileName","_jsxFileName","lineNumber","columnNumber","variant","onClick","_c","App","_c2","$RefreshReg$"],"sources":["E:/web/web/2024/ms-korportal/src/App.jsx"],"sourcesContent":["import React, { useState } from 'react';\n\nimport { loginRequest } from './authConfig';\nimport { callMe } from './api/graph';\nimport { ProfileData } from './components/ProfileData';\n\nimport { AuthenticatedTemplate, UnauthenticatedTemplate, useMsal } from '@azure/msal-react';\nimport './App.css';\nimport Button from 'react-bootstrap/Button';\nimport LoginPage from './pages/LoginPage';\nimport HomePage from './pages/HomePage';\nimport PageLayout from './components/PageLayout/PageLayout';\n\n/**\n * Renders information about the signed-in user or a button to retrieve data about the user\n */\n\nconst ProfileContent = () => {\n\tconst { instance, accounts } = useMsal();\n\tconst [graphData, setGraphData] = useState(null);\n\n\tfunction RequestProfileData() {\n\t\t// Silently acquires an access token which is then attached to a request for MS Graph data\n\t\tinstance\n\t\t\t.acquireTokenSilent({\n\t\t\t\t...loginRequest,\n\t\t\t\taccount: accounts[0],\n\t\t\t})\n\t\t\t.then((response) => {\n\t\t\t\tcallMe(response.accessToken).then((response) => setGraphData(response));\n\t\t\t});\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<h5 className=\"profileContent\">Welcome {accounts[0].name}</h5>\n\t\t\t{graphData ? (\n\t\t\t\t<ProfileData graphData={graphData} />\n\t\t\t) : (\n\t\t\t\t<Button variant=\"secondary\" onClick={RequestProfileData}>\n\t\t\t\t\tRequest Profile\n\t\t\t\t</Button>\n\t\t\t)}\n\t\t</>\n\t);\n};\n\n/**\n * If a user is authenticated the ProfileContent component above is rendered. Otherwise a message indicating a user is not authenticated is rendered.\n */\n\nexport default function App() {\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<AuthenticatedTemplate>\n\t\t\t\t<PageLayout>\n\t\t\t\t\t<p>gi</p>\n\t\t\t\t</PageLayout>\n\t\t\t\t{/* <HomePage /> */}\n\t\t\t\t{/* <ProfileContent /> */}\n\t\t\t</AuthenticatedTemplate>\n\n\t\t\t<UnauthenticatedTemplate>\n\t\t\t\t<LoginPage />\n\t\t\t</UnauthenticatedTemplate>\n\t\t</div>\n\t);\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}