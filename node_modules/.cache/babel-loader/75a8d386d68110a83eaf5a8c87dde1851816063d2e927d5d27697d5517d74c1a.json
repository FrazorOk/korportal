{"ast":null,"code":"var _jsxFileName = \"E:\\\\web\\\\web\\\\2024\\\\korportal\\\\src\\\\components\\\\NewsList\\\\NewsList.jsx\",\n  _s = $RefreshSig$();\nimport { memo, useEffect, useState } from 'react';\nimport s from './NewsList.module.css';\nimport NewsItem from '../NewsItem/NewsItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst toDay = new Date().toJSON().slice(0, 10);\nconst NewsList = ({\n  data,\n  setTags,\n  filterParams\n}) => {\n  _s();\n  let [news, setNews] = useState([]);\n  let [visibleNews, setVisibleNews] = useState([]);\n  const getUniqueTags = arr => {\n    if (arr) {\n      let concatedArray = [];\n      arr.forEach((element, index) => {\n        if (index !== arr.length - 1) {\n          concatedArray = [...concatedArray, ...element.tags];\n        }\n      });\n      let uniqueTags = [...new Set(concatedArray)];\n      return uniqueTags;\n    }\n  };\n  const getFilteredNews = () => {\n    if (filterParams.tags) {\n      return [];\n    } else {\n      if (filterParams.params === 'Усі') {\n        return news;\n      }\n      if (filterParams.params === 'Сьогодні') {\n        console.log(news.filter((el, index) => index < data.length - 1 && el.pub_date.slice(0, 10) === toDay));\n      }\n    }\n  };\n  useEffect(() => {\n    setNews(data);\n    setTags(getUniqueTags(data));\n  }, [data]);\n  useEffect(() => {\n    console.log(news);\n    setVisibleNews(getFilteredNews());\n  }, [news, filterParams]);\n  useEffect(() => {\n    console.log(visibleNews);\n  }, [visibleNews]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: s.news_container,\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: filterParams.params\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.news,\n      children: visibleNews.length > 0 ? news.map((item, index) => {\n        if (index < news.length - 1 && news.length > 0) {\n          return /*#__PURE__*/_jsxDEV(NewsItem, {\n            item: item\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, this);\n        }\n      }) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\u041D\\u0456\\u0447\\u043E\\u0433\\u043E \\u043D\\u0435 \\u0437\\u043D\\u0430\\u0439\\u0434\\u0435\\u043D\\u043E\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 3\n  }, this);\n};\n_s(NewsList, \"ASZqHEKxyj/L2gMX31u/EwZi1UA=\");\n_c = NewsList;\nexport default _c2 = /*#__PURE__*/memo(NewsList);\nvar _c, _c2;\n$RefreshReg$(_c, \"NewsList\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["memo","useEffect","useState","s","NewsItem","jsxDEV","_jsxDEV","toDay","Date","toJSON","slice","NewsList","data","setTags","filterParams","_s","news","setNews","visibleNews","setVisibleNews","getUniqueTags","arr","concatedArray","forEach","element","index","length","tags","uniqueTags","Set","getFilteredNews","params","console","log","filter","el","pub_date","className","news_container","children","fileName","_jsxFileName","lineNumber","columnNumber","map","item","_c","_c2","$RefreshReg$"],"sources":["E:/web/web/2024/korportal/src/components/NewsList/NewsList.jsx"],"sourcesContent":["import { memo, useEffect, useState } from 'react';\r\nimport s from './NewsList.module.css';\r\nimport NewsItem from '../NewsItem/NewsItem';\r\n\r\nconst toDay = new Date().toJSON().slice(0, 10);\r\n\r\nconst NewsList = ({ data, setTags, filterParams }) => {\r\n\tlet [news, setNews] = useState([]);\r\n\tlet [visibleNews, setVisibleNews] = useState([]);\r\n\r\n\tconst getUniqueTags = (arr) => {\r\n\t\tif (arr) {\r\n\t\t\tlet concatedArray = [];\r\n\r\n\t\t\tarr.forEach((element, index) => {\r\n\t\t\t\tif (index !== arr.length - 1) {\r\n\t\t\t\t\tconcatedArray = [...concatedArray, ...element.tags];\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tlet uniqueTags = [...new Set(concatedArray)];\r\n\r\n\t\t\treturn uniqueTags;\r\n\t\t}\r\n\t};\r\n\tconst getFilteredNews = () => {\r\n\t\tif (filterParams.tags) {\r\n\t\t\treturn [];\r\n\t\t} else {\r\n\t\t\tif (filterParams.params === 'Усі') {\r\n\t\t\t\treturn news;\r\n\t\t\t}\r\n\t\t\tif (filterParams.params === 'Сьогодні') {\r\n\t\t\t\tconsole.log(news.filter((el, index) => index < data.length - 1 && el.pub_date.slice(0, 10) === toDay));\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tsetNews(data);\r\n\t\tsetTags(getUniqueTags(data));\r\n\t}, [data]);\r\n\r\n\tuseEffect(() => {\r\n\t\tconsole.log(news);\r\n\t\tsetVisibleNews(getFilteredNews());\r\n\t}, [news, filterParams]);\r\n\tuseEffect(() => {\r\n\t\tconsole.log(visibleNews);\r\n\t}, [visibleNews]);\r\n\r\n\treturn (\r\n\t\t<div className={s.news_container}>\r\n\t\t\t<p>{filterParams.params}</p>\r\n\t\t\t<div className={s.news}>\r\n\t\t\t\t{visibleNews.length > 0 ? (\r\n\t\t\t\t\tnews.map((item, index) => {\r\n\t\t\t\t\t\tif (index < news.length - 1 && news.length > 0) {\r\n\t\t\t\t\t\t\treturn <NewsItem item={item} key={index} />;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<p>Нічого не знайдено</p>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default memo(NewsList);\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}